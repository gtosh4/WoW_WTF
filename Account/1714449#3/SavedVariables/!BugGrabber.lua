
BugGrabberDB = {
	["session"] = 156,
	["lastSanitation"] = 3,
	["errors"] = {
		{
			["message"] = "[string \"--[==[ Error in 'Tosh ZT Party Defensives I...\"]:57: attempt to call field 'updateFrames' (a nil value)",
			["time"] = "2020/07/26 16:51:44",
			["locals"] = "(*temporary) = nil\n(*temporary) = <table> {\n 5 = <table> {\n }\n 7 = <table> {\n }\n}\n(*temporary) = \"attempt to call field 'updateFrames' (a nil value)\"\naura_env = <table> {\n last = 107833.330000\n region = <unnamed> {\n }\n id = \"Tosh ZT Party Defensives Icons\"\n spells = <table> {\n }\n maxAuraCount = 3\n scheduleUpdateFrames = <function> defined --[==[ Error in 'Tosh ZT Party Defensives Icons':'initialization' ]==] return function() --CHANGE HERE--\naura_env.maxAuraCount = 3\n---------------\n\nlocal config = aura_env.config\nlocal cDisplay = config[\"display\"]\nlocal cRegType = config[\"reg\"][\"type\"]\nlocal cRegSpell = config[\"reg\"][\"spell\"]\n\nlocal sharedConfigSpellIDs = {\n    [\"ArcaneTorrent\"] = {202719, 50613, 80483, 28730, 129597, 155145, 232633, 25046, 69179},\n    [\"Asphyxiate\"] = {221562, 108194},\n    [\"Evasion/Riposte\"] = {5277, 199754},\n    [\"Ascendance\"] = {114050, 114051},\n    [\"Bladestorm\"] = {227847, 46924},\n}\n\n-- Collecting registration information\naura_env.types = {}\naura_env.regTypes = {}\naura_env.spells = {}\naura_env.regSpells = {}\n\nfor key,value in pairs(cRegType) do\n    if value then        \n        if key:find(\"enabled\") == 1 then\n            local type = key:sub(8)\n            aura_env.types[type] = true\n        end\n    end\nend\n\nfor type,group in pairs(cRegSpell) do\n    for key,value in pairs(gro config = <table> {\n }\n regSpells = <table> {\n }\n regTypes = <table> {\n }\n types = <table> {\n }\n}\nallstates = <table> {\n 5 = <table> {\n }\n 7 = <table> {\n }\n}\n",
			["stack"] = "[string \"--[==[ Error in 'Tosh ZT Party Defensives Icons':'initialization' ]==] return function() --CHANGE HERE--\naura_env.maxAuraCount = 3\n---------------\n\nlocal config = aura_env.config\nlocal cDisplay = config[\"display\"]\nlocal cRegType = config[\"reg\"][\"type\"]\nlocal cRegSpell = config[\"reg\"][\"spell\"]\n\nlocal sharedConfigSpellIDs = {\n    [\"ArcaneTorrent\"] = {202719, 50613, 80483, 28730, 129597, 155145, 232633, 25046, 69179},\n    [\"Asphyxiate\"] = {221562, 108194},\n    [\"Evasion/Riposte\"] = {5277, 199754},\n    [\"Ascendance\"] = {114050, 114051},\n    [\"Bladestorm\"] = {227847, 46924},\n}\n\n-- Collecting registration information\naura_env.types = {}\naura_env.regTypes = {}\naura_env.spells = {}\naura_env.regSpells = {}\n\nfor key,value in pairs(cRegType) do\n    if value then        \n        if key:find(\"enabled\") == 1 then\n            local type = key:sub(8)\n            aura_env.types[type] = true\n        end\n    end\nend\n\nfor type,group in pairs(cRegSpell) do\n    for key,value in pairs(group) do\n        if value then\n            local spellID = tonumber(key)\n            if spellID then\n                aura_env.spells[spellID] = true\n            else\n                for _,spellID in ipairs(sharedConfigSpellIDs[key]) do\n                    aura_env.spells[spellID] = true\n                end\n            end\n        end\n    end\nend\n\nfor type,_ in pairs(aura_env.types) do tinsert(aura_env.regTypes, type) end\nfor spellID,_ in pairs(aura_env.spells) do tinsert(aura_env.regSpells, spellID) end\n\nlocal aura_env = aura_env\n\nlocal timer\nfunction aura_env.scheduleUpdateFrames(allstates,duration)\n    if timer then timer:Cancel() end\n    local aura_env = aura_env\n    timer = C_Timer.NewTimer(duration, function() aura_env.updateFrames(allstates) end)\nend\n\n\n\n\n end\"]:57: in function <[string \"--[==[ Error in 'Tosh ZT Party Defensives I...\"]:57>\n[string \"@Interface\\SharedXML\\C_TimerAugment.lua\"]:16: in function <Interface\\SharedXML\\C_TimerAugment.lua:14>",
			["session"] = 143,
			["counter"] = 3,
		}, -- [1]
	},
}
